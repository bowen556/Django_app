# Generated by Django 2.2.9 on 2020-07-19 17:05

import accounts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0034_auto_20200716_2104'),
    ]

    operations = [
        migrations.AddField(
            model_name='blacklist',
            name='changed_by',
            field=models.ForeignKey(default='0', editable=False, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='entry',
            name='changed_by',
            field=models.ForeignKey(default='0', editable=False, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='entry',
            name='STS_Latitude',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='entry',
            name='STS_Longitude',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='entry',
            name='degrees_latitude',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='entry',
            name='degrees_longitude',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='HistoricalEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('Location_Name', models.CharField(max_length=200, null=True)),
                ('region', models.CharField(default='uncategorized', max_length=200, null=True)),
                ('locations', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Locations, model_form_class=accounts.models.LocationsForm, null=True)),
                ('emergencycontacts', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.EmergencyContacts, model_form_class=accounts.models.EmergencyContactsForm, null=True)),
                ('equipment_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Equipment_Details, model_form_class=accounts.models.Equipment_DetailsForm, null=True)),
                ('Agent_Company', models.CharField(max_length=200, null=True)),
                ('agent_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Agent_Details, model_form_class=accounts.models.Agent_DetailsForm, null=True)),
                ('base_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Base_Details, model_form_class=accounts.models.Base_DetailsForm, null=True)),
                ('notice_period', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Notice_Period, model_form_class=accounts.models.Notice_PeriodForm, null=True)),
                ('support_craft_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Support_Craft_Details, model_form_class=accounts.models.Support_Craft_DetailsForm, null=True)),
                ('Provider_company', models.CharField(max_length=200, null=True)),
                ('tug_provider_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Tug_Provider_Details, model_form_class=accounts.models.Tug_Provider_DetailsForm, null=True)),
                ('area_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Area_Details, model_form_class=accounts.models.Area_DetailsForm, null=True)),
                ('navigational_hazards', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Navigational_Hazards, model_form_class=accounts.models.Navigational_HazardsForm, null=True)),
                ('met_ocean_conditions', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Met_Ocean_Conditions, model_form_class=accounts.models.Met_Ocean_ConditionsForm, null=True)),
                ('environmental_details', djongo.models.fields.EmbeddedModelField(model_container=accounts.models.Environmental_Details, model_form_class=accounts.models.Environmental_DetailsForm, null=True)),
                ('degrees_latitude', models.IntegerField(blank=True, null=True)),
                ('minutes_latitude', models.IntegerField(blank=True, null=True)),
                ('seconds_latitude', models.IntegerField(blank=True, null=True)),
                ('degrees_longitude', models.IntegerField(blank=True, null=True)),
                ('minutes_longitude', models.IntegerField(blank=True, null=True)),
                ('seconds_longitude', models.IntegerField(blank=True, null=True)),
                ('STS_Latitude', models.IntegerField(blank=True, null=True)),
                ('STS_Longitude', models.IntegerField(blank=True, null=True)),
                ('number_of_images', models.CharField(max_length=15, null=True)),
                ('Image1', models.TextField(blank=True, max_length=100, null=True)),
                ('Image2', models.TextField(blank=True, max_length=100, null=True)),
                ('Image3', models.TextField(blank=True, max_length=100, null=True)),
                ('Image4', models.TextField(blank=True, max_length=100, null=True)),
                ('Image5', models.TextField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, default='0', editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical entry',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalBlackList',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('username', models.CharField(max_length=1000)),
                ('flag1', models.BooleanField(default=False)),
                ('flag2', models.BooleanField(default=False)),
                ('flag3', models.BooleanField(default=False)),
                ('trytologintime', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('changed_by', models.ForeignKey(blank=True, db_constraint=False, default='0', editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical black list',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
